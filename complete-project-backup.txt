# LAR GROUP B.V. PROJECT - COMPLETE CODE BACKUP
# Generated: $(date)
# All important files and configurations

=== HERO COMPONENT (src/components/Hero.tsx) ===
import {getTranslations} from 'next-intl/server';
import Link from 'next/link';

interface HeroProps {
  locale: string;
}

export default async function Hero({ locale }: HeroProps) {
  const t = await getTranslations({locale, namespace: 'HomePage'});

  return (
    <section className="w-full bg-blue-900 text-white">
      <div className="container mx-auto flex flex-col items-center justify-center text-center px-4 py-20 md:py-32">
        <h1 className="text-4xl md:text-6xl font-bold leading-tight mb-6">
          {t('heroTitle')}
        </h1>
        <p className="text-lg md:text-xl max-w-3xl mb-8 opacity-90">
          {t('heroSubtitle')}
        </p>
        <p className="text-base md:text-lg mb-10 opacity-80 max-w-2xl">
          {locale === 'nl' 
            ? 'Van biologische granen tot gespecialiseerde zaden - wij bieden kwaliteitsproducten met volledige certificering en betrouwbare levering.'
            : 'From organic grains to specialized seeds - we offer quality products with full certification and reliable delivery.'
          }
        </p>
        
        <div className="flex flex-col sm:flex-row gap-4 justify-center">
          <Link 
            href="/contact" 
            className="bg-white text-blue-900 font-bold py-3 px-8 rounded-full hover:bg-gray-200 transition-colors shadow-lg"
          >
            {t('heroCta')}
          </Link>
          <Link 
            href="/products" 
            className="bg-transparent border-2 border-white text-white font-bold py-3 px-8 rounded-full hover:bg-white hover:text-blue-900 transition-colors"
          >
            {locale === 'nl' ? 'Bekijk Producten' : 'View Products'}
          </Link>
        </div>
      </div>
    </section>
  );
}

=== HEADER COMPONENT (src/components/Header.tsx) ===
'use client';

import { useTranslations } from 'next-intl';
import { useLocale } from 'next-intl';
import Link from 'next/link';
import { useState } from 'react';
import { usePathname } from 'next/navigation';

export default function Header() {
  const t = useTranslations('Navigation');
  const locale = useLocale();
  const pathname = usePathname();
  const [isMenuOpen, setIsMenuOpen] = useState(false);

  const navigation = [
    { name: t('home'), href: `/${locale}` },
    { name: t('about'), href: `/${locale}/about` },
    { name: t('products'), href: `/${locale}/products` },
    { name: t('quality'), href: `/${locale}/quality-and-certifications` },
    { name: t('blog'), href: `/${locale}/blog` },
    { name: t('faq'), href: `/${locale}/faq` },
    { name: t('contact'), href: `/${locale}/contact` },
  ];

  const switchLocale = (newLocale: string) => {
    const segments = pathname.split('/');
    const cleanPath = segments.slice(2).join('/');
    return `/${newLocale}${cleanPath ? `/${cleanPath}` : ''}`;
  };

  // WORKING SOLUTION: Direct pathname check for active locale
  const isNlActive = pathname.startsWith('/nl');
  const isEnActive = pathname.startsWith('/en');

  return (
    <header className="bg-white shadow-lg border-b border-gray-200">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="flex justify-between items-center h-20">
          
          {/* LAR Group Logo */}
          <div className="flex items-center">
            <Link href={`/${locale}`} className="flex items-center space-x-3">
              <div className="w-10 h-10 bg-blue-900 rounded-lg flex items-center justify-center">
                <span className="text-white font-bold text-xl">L</span>
              </div>
              <div>
                <div className="text-xl font-bold text-blue-900">LAR Group B.V.</div>
                <div className="text-xs text-gray-600">Professional Seeds & Grains</div>
              </div>
            </Link>
          </div>

          {/* Desktop Navigation */}
          <nav className="hidden lg:flex space-x-1">
            {navigation.map((item) => (
              <Link
                key={item.name}
                href={item.href}
                className="text-gray-700 hover:text-blue-900 hover:bg-blue-50 px-4 py-2 rounded-lg text-sm font-medium transition-all duration-200"
              >
                {item.name}
              </Link>
            ))}
          </nav>

          {/* Contact Info & Language Switcher - Desktop */}
          <div className="hidden md:flex items-center space-x-6">
            <div className="text-sm text-gray-600">
              <div className="font-semibold">+31 6 17144921</div>
              <div>alex.trade@largseeds.nl</div>
            </div>
            
            {/* PERFECT Language Switcher - WORKING! */}
            <div className="flex items-center space-x-1 bg-gray-100 rounded-lg p-1">
              <Link
                href={switchLocale('nl')}
                className={`px-3 py-2 text-sm font-medium rounded-md transition-all ${
                  isNlActive
                    ? 'bg-blue-900 text-white shadow-sm' 
                    : 'text-gray-600 hover:text-blue-900 hover:bg-white'
                }`}
              >
                NL
              </Link>
              <Link
                href={switchLocale('en')}
                className={`px-3 py-2 text-sm font-medium rounded-md transition-all ${
                  isEnActive
                    ? 'bg-blue-900 text-white shadow-sm' 
                    : 'text-gray-600 hover:text-blue-900 hover:bg-white'
                }`}
              >
                EN
              </Link>
            </div>
          </div>

          {/* Mobile menu button */}
          <div className="lg:hidden">
            <button
              onClick={() => setIsMenuOpen(!isMenuOpen)}
              className="text-gray-600 hover:text-blue-900 p-2"
            >
              <svg className="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                {isMenuOpen ? (
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />
                ) : (
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M4 6h16M4 12h16M4 18h16" />
                )}
              </svg>
            </button>
          </div>
        </div>

        {/* Mobile Navigation */}
        {isMenuOpen && (
          <div className="lg:hidden py-4 border-t border-gray-200">
            <div className="flex flex-col space-y-2">
              {navigation.map((item) => (
                <Link
                  key={item.name}
                  href={item.href}
                  className="text-gray-700 hover:text-blue-900 hover:bg-blue-50 px-4 py-3 rounded-lg font-medium transition-colors"
                  onClick={() => setIsMenuOpen(false)}
                >
                  {item.name}
                </Link>
              ))}
              
              {/* Mobile Language Switcher */}
              <div className="flex items-center space-x-2 px-4 pt-4">
                <span className="text-sm text-gray-600">Language:</span>
                <Link
                  href={switchLocale('nl')}
                  className={`px-3 py-1 text-sm rounded transition-colors ${
                    isNlActive ? 'bg-blue-900 text-white' : 'bg-gray-200 text-gray-700 hover:bg-gray-300'
                  }`}
                >
                  NL
                </Link>
                <Link
                  href={switchLocale('en')}
                  className={`px-3 py-1 text-sm rounded transition-colors ${
                    isEnActive ? 'bg-blue-900 text-white' : 'bg-gray-200 text-gray-700 hover:bg-gray-300'
                  }`}
                >
                  EN
                </Link>
              </div>
            </div>
          </div>
        )}
      </div>
    </header>
  );
}

=== FOOTER COMPONENT (src/components/Footer.tsx) ===
'use client';

import { useTranslations } from 'next-intl';
import { useLocale } from 'next-intl';
import Link from 'next/link';

export default function Footer() {
  const t = useTranslations('Footer');
  const locale = useLocale();
  const currentYear = new Date().getFullYear();

  const navigation = [
    { name: t('home'), href: `/${locale}` },
    { name: t('about'), href: `/${locale}/about` },
    { name: t('products'), href: `/${locale}/products` },
    { name: t('quality'), href: `/${locale}/quality-and-certifications` },
    { name: t('contact'), href: `/${locale}/contact` },
  ];

  return (
    <footer className="bg-gray-900 text-white">
      <div className="max-w-7xl mx-auto px-4 py-12 sm:px-6 lg:px-8">
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8">
          
          {/* Company Info - ROYAL SECTION */}
          <div className="col-span-1 lg:col-span-2">
            <div className="flex items-center space-x-3 mb-6">
              <div className="w-12 h-12 bg-blue-600 rounded-lg flex items-center justify-center">
                <span className="text-white font-bold text-2xl">L</span>
              </div>
              <div>
                <div className="text-2xl font-bold">LAR Group B.V.</div>
                <div className="text-gray-400 text-sm">Professional Seeds & Grains</div>
              </div>
            </div>
            
            {/* NOW USING TRANSLATION */}
            <p className="text-gray-300 mb-6 max-w-md leading-relaxed">
              {t('description')}
            </p>

            {/* ROYAL Certifications */}
            <div className="mb-6">
              <h4 className="text-sm font-semibold text-gray-400 uppercase mb-3">
                {t('certifications')}
              </h4>
              <div className="flex items-center space-x-4">
                <div className="bg-green-700 px-3 py-1 rounded text-sm font-medium">
                  IFS Broker
                </div>
                <div className="bg-blue-700 px-3 py-1 rounded text-sm font-medium">
                  ISO 22000
                </div>
              </div>
            </div>
          </div>

          {/* ROYAL Quick Links */}
          <div>
            <h3 className="text-lg font-semibold mb-6">
              {t('quickLinks')}
            </h3>
            <ul className="space-y-3">
              {navigation.map((item) => (
                <li key={item.name}>
                  <Link
                    href={item.href}
                    className="text-gray-300 hover:text-white transition-colors duration-200"
                  >
                    {item.name}
                  </Link>
                </li>
              ))}
            </ul>
          </div>

          {/* ROYAL Contact Information */}
          <div>
            <h3 className="text-lg font-semibold mb-6">
              {t('contactInfo')}
            </h3>
            <div className="space-y-4">
              
              {/* Address with ROYAL icon */}
              <div className="flex items-start space-x-3">
                <svg className="w-5 h-5 text-blue-400 mt-1 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z" />
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M15 11a3 3 0 11-6 0 3 3 0 016 0z" />
                </svg>
                <div className="text-gray-300">
                  <div>Abstraat 10</div>
                  <div>5504CJ Veldhoven</div>
                  <div>Netherlands</div>
                </div>
              </div>

              {/* Phone with ROYAL icon */}
              <div className="flex items-center space-x-3">
                <svg className="w-5 h-5 text-blue-400 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z" />
                </svg>
                <a href="tel:+31617144921" className="text-gray-300 hover:text-white transition-colors">
                  +31 6 17144921
                </a>
              </div>

              {/* Email with ROYAL icon */}
              <div className="flex items-center space-x-3">
                <svg className="w-5 h-5 text-blue-400 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
                </svg>
                <a href="mailto:alex.trade@largseeds.nl" className="text-gray-300 hover:text-white transition-colors">
                  alex.trade@largseeds.nl
                </a>
              </div>

              {/* ROYAL Business Hours */}
              <div className="mt-6">
                <h4 className="text-sm font-semibold text-gray-400 uppercase mb-2">
                  {t('businessHours')}
                </h4>
                <div className="text-gray-300 text-sm space-y-1">
                  <div>{t('mondayFriday')}</div>
                  <div>{t('weekend')}</div>
                </div>
              </div>
            </div>
          </div>
        </div>

        {/* ROYAL Bottom Bar */}
        <div className="mt-12 pt-8 border-t border-gray-800">
          <div className="flex flex-col md:flex-row justify-between items-center">
            <div className="text-gray-400 text-sm mb-4 md:mb-0">
              © {currentYear} LAR Group B.V. {t('allRights')} 
              <span className="ml-4 text-gray-500">
                {t('founded')}
              </span>
            </div>
            
            <div className="flex items-center space-x-6 text-sm text-gray-400">
              <Link href={`/${locale}/privacy-policy`} className="hover:text-white transition-colors">
                {t('privacyPolicy')}
              </Link>
              <Link href={`/${locale}/terms-of-service`} className="hover:text-white transition-colors">
                {t('terms')}
              </Link>
              <div className="text-gray-500">
                KvK: 12345678
              </div>
            </div>
          </div>
        </div>
      </div>
    </footer>
  );
}

=== HOME PAGE (src/app/[locale]/page.tsx) ===
import Hero from '@/components/Hero';

export default async function HomePage({
  params
}: {
  params: Promise<{ locale: string }>;
}) {
  const { locale } = await params;
  
  return (
    <div>
      <Hero locale={locale} />
      {/* Future sections will go here */}
    </div>
  );
}

=== ABOUT PAGE (src/app/[locale]/about/page.tsx) ===

=== LAYOUT (src/app/[locale]/layout.tsx) ===
import {NextIntlClientProvider} from 'next-intl';
import {getMessages} from 'next-intl/server';
import type { Metadata } from 'next';
import { Geist, Geist_Mono } from 'next/font/google';
import '../globals.css';
import Header from '@/components/Header';
import Footer from '@/components/Footer';

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "LAR Group B.V. - Professional Seeds & Grains",
  description: "Professional B2B wholesale of high-quality seeds and grains for agricultural and commercial purposes.",
};

export default async function LocaleLayout({
  children,
  params
}: {
  children: React.ReactNode;
  params: Promise<{ locale: string }>;
}) {
  const { locale } = await params;
  const messages = await getMessages({locale});

  return (
    <html lang={locale}>
      <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
        <NextIntlClientProvider messages={messages}>
          <div className="min-h-screen flex flex-col">
            <Header />
            <main className="flex-1">
              {children}
            </main>
            <Footer />
          </div>
        </NextIntlClientProvider>
      </body>
    </html>
  );
}

=== DUTCH TRANSLATIONS (messages/nl.json) ===
{
  "Navigation": {
    "home": "Home",
    "about": "Over ons",
    "products": "Producten",
    "blog": "Blog",
    "quality": "Kwaliteit & Certificeringen",
    "faq": "Veelgestelde vragen",
    "contact": "Contact"
  },
  "HomePage": {
    "title": "Welkom bij LAR Group B.V.",
    "subtitle": "Professionele groothandel in zaden en granen",
    "description": "Wij zijn gespecialiseerd in B2B-levering van hoogwaardige zaden en granen voor agrarische en commerciële doeleinden.",
    "heroTitle": "Premium Groothandel Zaden en Granen voor B2B Klanten",
    "heroSubtitle": "Wij zijn gespecialiseerd in de B2B-levering van hoogwaardige zaden en granen voor agrarische en commerciële doeleinden.",
    "heroCta": "Vraag uw offerte aan"
  },
  "Common": {
    "readMore": "Lees meer",
    "contactUs": "Neem contact op",
    "getQuote": "Vraag offerte aan"
  },
  "Footer": {
    "home": "Home",
    "about": "Over ons",
    "products": "Producten",
    "quality": "Kwaliteit & Certificeringen",
    "contact": "Contact",
    "description": "Sinds 2009 zijn wij gespecialiseerd in B2B-levering van hoogwaardige zaden en granen voor agrarische en commerciële doeleinden.",
    "certifications": "Certificeringen",
    "quickLinks": "Snelle Links",
    "contactInfo": "Contact Informatie",
    "businessHours": "Openingstijden",
    "mondayFriday": "Ma - Vr: 08:00 - 17:00",
    "weekend": "Za - Zo: Gesloten",
    "allRights": "Alle rechten voorbehouden.",
    "founded": "Opgericht in 2009",
    "privacyPolicy": "Privacybeleid",
    "terms": "Voorwaarden"
  }
}

=== ENGLISH TRANSLATIONS (messages/en.json) ===
{
  "Navigation": {
    "home": "Home",
    "about": "About",
    "products": "Products",
    "blog": "Blog",
    "quality": "Quality & Certifications",
    "faq": "FAQ",
    "contact": "Contact"
  },
  "HomePage": {
    "title": "Welcome to LAR Group B.V.",
    "subtitle": "Professional wholesale of seeds and grains",
    "description": "We specialize in B2B supply of high-quality seeds and grains for agricultural and commercial purposes.",
    "heroTitle": "Premium Wholesale Seeds and Grains for B2B Customers",
    "heroSubtitle": "We specialize in the B2B supply of high-quality seeds and grains for agricultural and commercial purposes.",
    "heroCta": "Request a Quote"
  },
  "Common": {
    "readMore": "Read more",
    "contactUs": "Contact us",
    "getQuote": "Get quote"
  },
  "Footer": {
    "home": "Home",
    "about": "About",
    "products": "Products",
    "quality": "Quality & Certifications",
    "contact": "Contact",
    "description": "Since 2009, we specialize in B2B supply of high-quality seeds and grains for agricultural and commercial purposes.",
    "certifications": "Certifications",
    "quickLinks": "Quick Links",
    "contactInfo": "Contact Information",
    "businessHours": "Business Hours",
    "mondayFriday": "Mon - Fri: 08:00 - 17:00",
    "weekend": "Sat - Sun: Closed",
    "allRights": "All rights reserved.",
    "founded": "Founded in 2009",
    "privacyPolicy": "Privacy Policy",
    "terms": "Terms of Service"
  }
}

=== SANITY CLIENT (src/lib/sanityClient.ts) ===
import { createClient } from '@sanity/client';

export const client = createClient({
  projectId: process.env.NEXT_PUBLIC_SANITY_PROJECT_ID!,
  dataset: process.env.NEXT_PUBLIC_SANITY_DATASET!,
  useCdn: true, // true для продакшена
  apiVersion: '2024-06-25',
});

=== NEXT.JS CONFIG (next.config.ts) ===
import withNextIntl from 'next-intl/plugin';

const withNextIntlConfig = withNextIntl('./i18n.ts');

/** @type {import('next').NextConfig} */
const nextConfig = {
  /* config options here */
};

export default withNextIntlConfig(nextConfig);

=== I18N CONFIG (i18n.ts) ===
import {getRequestConfig} from 'next-intl/server';

export default getRequestConfig(async ({locale}) => {
  // Fallback to 'nl' if locale is undefined
  const resolvedLocale = locale || 'nl';
  
  return {
    locale: resolvedLocale,
    messages: (await import(`./messages/${resolvedLocale}.json`)).default
  };
});

=== MIDDLEWARE (middleware.ts) ===

=== PACKAGE.JSON DEPENDENCIES ===
{
  "name": "mysite",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "start": "next start",
    "lint": "next lint"
  },
  "dependencies": {
    "@portabletext/react": "^3.2.1",
    "@sanity/client": "^7.6.0",
    "@sanity/image-url": "^1.1.0",
    "@tailwindcss/typography": "^0.5.16",
    "next": "15.3.4",
    "next-intl": "^4.3.1",
    "react": "^19.0.0",
    "react-dom": "^19.0.0"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3",
    "@tailwindcss/postcss": "^4",
    "@types/node": "^20",
    "@types/react": "^19",
    "@types/react-dom": "^19",
    "eslint": "^9",
    "eslint-config-next": "15.3.4",
    "tailwindcss": "^4",
    "typescript": "^5"
  }
}

=== ENVIRONMENT VARIABLES TEMPLATE ===
# .env.local
NEXT_PUBLIC_SANITY_PROJECT_ID=your_project_id
NEXT_PUBLIC_SANITY_DATASET=production
